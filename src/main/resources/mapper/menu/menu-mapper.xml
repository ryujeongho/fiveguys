<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="menu">
    <!-- 메뉴 전체 조회 - 재준 -->
    <!--    <select id="findAll" resultType="menu">-->
    <!--        select-->
    <!--            *-->
    <!--        from-->
    <!--            menu-->
    <!--    </select>-->

    <!-- 메뉴 식별번호로 메뉴 한개 조회 - 재준 -->
    <select id="findByNo" resultType="menu">
        select
            *
        from
            menu
        where
            no = #{no}
    </select>

    <!-- 메뉴 추가 - 재준 -->
    <insert id="insertMenu">
        insert into
        menu
        values (
            ('menu' || lpad(seq_menu_no.nextval,3,0)), #{restNo}, #{name}, #{content}, #{price}
        )
        <selectKey order="AFTER" resultType="string" keyProperty="no">
            select
                ('menu' || lpad(seq_menu_no.currval,3,0))
            from
                dual
        </selectKey>
    </insert>
    <!-- 메뉴 사진 추가 - 재준 -->
    <insert id="insertMenuPicture">
        insert into menu_picture values (
            ('menu_pic' || lpad(seq_menu_picture_no.nextval,3,0)), #{menuNo}, #{renamedFilename}
        )
        <selectKey order="AFTER" resultType="string" keyProperty="no">
            select
                ('menu_pic' || lpad(seq_menu_picture_no.currval,3,0))
            from
                dual
        </selectKey>
    </insert>
    <resultMap id="menuVoMap" type="menuVo">
        <id column="no" property="no"/>
        <result column="rest_no" property="restNo"/>
        <result column="name" property="name"/>
        <result column="content" property="content"/>
        <result column="price" property="price"/>
        <collection property="menuPictures" ofType="menuPicture">
            <id column="no" property="no"/>
            <result column="menu_no" property="menuNo"/>
            <result column="renamed_filename" property="renamedFilename"/>
        </collection>
    </resultMap>

    <!-- 메뉴 수정 - 재준 -->
    <update id="updateMenu">
        update
            menu
        set
            name = #{name}
          , content = #{content}
          , price = #{price}
        where
            no = #{no}
    </update>
    <update id="updateMenuPicture">
        update
            menu_picture
        set
            renamed_filename = #{renamedFilename}
        where
            no = #{no}
    </update>

    <!-- 메뉴 삭제 -->
    <delete id="deleteMenu">
        delete from
            menu
        where
            no = #{no}
    </delete>

    <!-- 메뉴 이름으로 식당 식별번호 조회 - 재준 -->
    <select id="findByName" resultType="String">
        select
            rest_no
        from
            menu
        where
            name = #{name}
    </select>

    <!-- 전체 게시물 조회 - 정호 -->
    <select id="getTotalCount" resultType="_int">
        select distinct
        count(*)
        from
        restaurant
        --         r left join menu m
        --         on r.no = m.rest_no
        --         left join menu_picture p
        --         on m.no = p.menu_no
        <where>
            <if test="searchKeyword != null and searchKeyword != '' and searchType != null and searchType != ''">
                ${searchType} like '%' || #{searchKeyword} || '%'
            </if>
        </where>
    </select>

    <!-- 페이지 별 게시물 조회 - 정호 -->
    <select id="findAllPage" resultMap="restaurantVoMap">
        <!-- WITH 절을 이용한 UserCategories 서브쿼리 -->
        <if test="no1 != null">
            WITH UserCategories AS (
            SELECT TRIM(REGEXP_SUBSTR(category, '[^,]+', 1, LEVEL)) AS category
            FROM users
            WHERE no = #{no1}
            CONNECT BY LEVEL &lt;= REGEXP_COUNT(category, ',') + 1
            ),
            RankedPictures AS (
            SELECT
            r.no AS restaurant_no,
            r.name,
            r.address,
            r.category,
            p.renamed_filename,
            ROW_NUMBER() OVER (PARTITION BY r.no ORDER BY p.renamed_filename) AS rn
            FROM
            restaurant r
            LEFT JOIN menu m ON r.no = m.rest_no
            LEFT JOIN menu_picture p ON m.no = p.menu_no
            )
            SELECT
            restaurant_no AS no,
            name,
            address,
            category,
            renamed_filename
            FROM
            RankedPictures
            <where>
                rn = 1
                <if test="searchKeyword != null and searchKeyword != '' and searchType != null and searchType != ''">
                    and
                    ${searchType} like '%' || #{searchKeyword} || '%'
                </if>
            </where>
            ORDER BY
            CASE
            WHEN category IN (SELECT category FROM UserCategories) THEN 0
            ELSE 1
            END,
            category,
            no DESC,
            renamed_filename
        </if>
        <if test="no1 == null">
            WITH RankedPictures AS (
            SELECT
                r.no AS restaurant_no,
                r.name AS name,
                r.address AS address,
                r.category AS category,
                p.renamed_filename,
                ROW_NUMBER() OVER (PARTITION BY r.no ORDER BY p.renamed_filename) AS rn
            FROM
                restaurant r left join menu m
                    on r.no = m.rest_no
                        left join menu_picture p
                            on m.no = p.menu_no
            )
            SELECT
                restaurant_no AS no,
                name,
                address,
                category,
                renamed_filename
            FROM
                RankedPictures
            <where>
                rn = 1
                <if test="searchKeyword != null and searchKeyword != '' and searchType != null and searchType != ''">
                    and
                    ${searchType} like '%' || #{searchKeyword} || '%'
                </if>
            </where>
            ORDER BY
                no DESC, renamed_filename
        </if>
    </select>

    <resultMap id="restaurantVoMap" type="restaurantVo">
        <id column="no" property="no"/>
        <result column="name" property="name"/>
        <result column="address" property="address"/>
        <result column="category" property="category"/>
        <collection property="menuPictures" ofType="menuPicture">
            <id column="pic_no" property="no"/>
            <result column="renamed_filename" property="renamedFilename"/>
        </collection>
    </resultMap>

    <select id="getTotalCount1" resultType="_int">
        select
            count(*)
        from
            restaurant r left join menu m
                                   on r.no = m.rest_no
                         left join menu_picture p
                                   on m.no = p.menu_no
    </select>

    <select id="findForUpdate" resultMap="menuVoMap">
        select
            m.no menu_no
            , m.rest_no
            , m.name
            , m.content
            , m.price
            , p.no picture_no
            , p.renamed_filename
        from
            menu m join menu_picture p
                on m.no = p.menu_no
        where
            m.no = #{no}
    </select>
</mapper>